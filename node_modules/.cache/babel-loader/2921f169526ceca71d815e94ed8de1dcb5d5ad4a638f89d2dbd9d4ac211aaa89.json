{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.fetchData && $options.fetchData(...args)),\n    class: \"fetch-button\"\n  }, \"Fetch Data\"), _createElementVNode(\"p\", null, _toDisplayString($data.message), 1)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","onClick","_cache","args","$options","fetchData","class","_toDisplayString","$data","message"],"sources":["/Users/pshongwe/ALX/Orda_v1.0/frontend/src/components/MyWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <button @click=\"fetchData\" class=\"fetch-button\">Fetch Data</button>\n    <p>{{ message }}</p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      message: ''\n    };\n  },\n  methods: {\n    fetchData() {\n      axios.get('http://localhost:5001/api/orders')\n        .then(response => {\n          this.message = response.data.message;\n        })\n        .catch(error => {\n          console.error('There was an error!', error);\n        });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.fetch-button {\n  background-color: #4CAF50; /* Green */\n  color: white;\n  border: none;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 4px 2px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.fetch-button:hover {\n  background-color: #45a049;\n}\n</style>\n"],"mappings":";;uBACEA,mBAAA,CAGM,cAFJC,mBAAA,CAAmE;IAA1DC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;IAAEG,KAAK,EAAC;KAAe,YAAU,GAC1DN,mBAAA,CAAoB,WAAAO,gBAAA,CAAdC,KAAA,CAAAC,OAAO,M","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}